/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 16 12:28:51 GMT 2022
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Timeout;

import java.util.concurrent.TimeUnit;

import static org.evosuite.runtime.EvoAssertions.*;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.LinkedList;
import java.util.List;

import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;
import sg.edu.nus.comp.cs4218.impl.app.CutApplication;
import sg.edu.nus.comp.cs4218.impl.app.args.CutArguments;

@SuppressWarnings("PMD") // Not required to check for generated tests
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class CutApplication_ESTest extends CutApplication_ESTest_scaffolding {
    @RegisterExtension
    static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(CutApplication_ESTest.class);

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test00() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        Boolean boolean0 = Boolean.valueOf("7Y/ts5{2zKU<");
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        CutArguments cutArguments0 = new CutArguments();
        List<int[]> list0 = cutArguments0.getNumList();
        Boolean boolean1 = Boolean.valueOf(true);
        try {
            cutApplication0.cutFromStdin(boolean0, boolean1, list0, byteArrayInputStream0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // Null Pointer Exception
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.util.IOUtils", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test01() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        String[] stringArray0 = new String[6];
        Boolean boolean0 = Boolean.TRUE;
        LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
        // Undeclared exception!
        try {
            cutApplication0.cutFromStdinAndFiles(boolean0, boolean0, linkedList0, pipedInputStream0, stringArray0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test02() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        Boolean boolean0 = Boolean.TRUE;
        try {
            cutApplication0.cutFromStdinAndFiles(boolean0, (Boolean) null, linkedList0, pipedInputStream0, (String[]) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // Null arguments
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.CutApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test03() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
        String[] stringArray0 = new String[0];
        try {
            cutApplication0.cutFromStdinAndFiles((Boolean) null, (Boolean) null, linkedList0, (InputStream) null, stringArray0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // Null Pointer Exception
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.CutApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test04() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        Boolean boolean0 = Boolean.FALSE;
        int[] intArray0 = new int[9];
        List<int[]> list0 = List.of(intArray0, intArray0, intArray0, intArray0, intArray0);
        try {
            cutApplication0.cutFromStdin(boolean0, boolean0, list0, (InputStream) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // Null Pointer Exception
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.CutApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test05() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        String[] stringArray0 = new String[1];
        stringArray0[0] = "R79=";
        CutApplication cutApplication0 = new CutApplication();
        String string0 = cutApplication0.cutFromFiles(boolean0, boolean0, (List<int[]>) null, stringArray0);
        assertEquals("", string0);
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test06() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        String[] stringArray0 = new String[3];
        stringArray0[0] = "";
        Boolean boolean0 = Boolean.TRUE;
        try {
            cutApplication0.cutFromFiles(boolean0, boolean0, (List<int[]>) null, stringArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test07() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        CutArguments cutArguments0 = new CutArguments();
        InputStream inputStream0 = InputStream.nullInputStream();
        Boolean boolean0 = Boolean.FALSE;
        List<int[]> list0 = cutArguments0.getNumList();
        String[] stringArray0 = new String[8];
        stringArray0[0] = "-";
        stringArray0[1] = "-";
        try {
            cutApplication0.cutFromStdinAndFiles(boolean0, (Boolean) null, list0, inputStream0, stringArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test08() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
        try {
            cutApplication0.cutFromFiles((Boolean) null, (Boolean) null, linkedList0, (String[]) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // Null arguments
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.CutApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test09() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        String[] stringArray0 = new String[6];
        stringArray0[3] = "-";
        try {
            cutApplication0.cutFromStdinAndFiles((Boolean) null, (Boolean) null, linkedList0, pipedInputStream0, stringArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test10() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        String[] stringArray0 = new String[0];
        InputStream inputStream0 = InputStream.nullInputStream();
        try {
            cutApplication0.run(stringArray0, inputStream0, (OutputStream) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // cut: Null Pointer Exception
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.CutApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test11() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        String[] stringArray0 = new String[1];
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        try {
            cutApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // cut: null
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.CutApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test12() throws Throwable {
        CutApplication cutApplication0 = new CutApplication();
        CutArguments cutArguments0 = new CutArguments();
        cutApplication0.setCutArgs(cutArguments0);
        assertFalse(cutArguments0.isCharacterPosition());
    }
}
