/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 17 02:19:04 GMT 2022
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import org.junit.jupiter.api.condition.DisabledOnOs;
import org.junit.jupiter.api.condition.OS;
import org.junit.jupiter.api.extension.RegisterExtension;
import sg.edu.nus.comp.cs4218.Environment;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.util.concurrent.TimeUnit;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.jupiter.api.Assertions.*;

@SuppressWarnings("PMD")
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class WcApplication_ESTest extends WcApplication_ESTest_scaffolding {
    @RegisterExtension
    static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(WcApplication_ESTest.class);

    @AfterEach
    public void reset() {
        Environment.resetCurrentDirectory();
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test00() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        byte[] byteArray0 = new byte[1];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        long[] longArray0 = wcApplication0.getCountReport(byteArrayInputStream0);
        assertArrayEquals(new long[]{0L, 1L, 1L}, longArray0);
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test01() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        try {
            wcApplication0.getCountReport((InputStream) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // wc: Null Pointer Exception
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test02() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        InputStream inputStream0 = InputStream.nullInputStream();
        Boolean boolean0 = Boolean.FALSE;
        String[] stringArray0 = new String[1];
        stringArray0[0] = "os.name";
        String string0 = wcApplication0.countFromFileAndStdin(boolean0, boolean0, boolean0, inputStream0, stringArray0);
        assertEquals("", string0);
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test03() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        Boolean boolean0 = Boolean.FALSE;
        PipedInputStream pipedInputStream0 = new PipedInputStream(395);
        try {
            wcApplication0.countFromFileAndStdin((Boolean) null, boolean0, boolean0, pipedInputStream0, (String[]) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // wc: Exception Caught
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test04() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        Boolean boolean0 = Boolean.FALSE;
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, 62);
        String string0 = wcApplication0.countFromStdin(boolean0, boolean0, boolean0, byteArrayInputStream0);
        assertEquals("", string0);
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test05() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        Boolean boolean0 = Boolean.TRUE;
        try {
            wcApplication0.countFromStdin(boolean0, boolean0, boolean0, (InputStream) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // wc: Null Pointer Exception
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
        }
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test06() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        Boolean boolean0 = Boolean.FALSE;
        String[] stringArray0 = new String[6];
        stringArray0[0] = "";
        assertThrows(Exception.class, () -> wcApplication0.countFromFiles(boolean0, boolean0, boolean0, stringArray0));
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test07() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        Boolean boolean0 = Boolean.valueOf("\t      0\t      0\t      0\r\n");
        try {
            wcApplication0.countFromFiles(boolean0, boolean0, boolean0, (String[]) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // wc: Exception Caught
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
        }
    }

    @DisabledOnOs({OS.MAC, OS.LINUX})
    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test08() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        MockPrintStream mockPrintStream0 = new MockPrintStream("rE");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream("rE");
        String[] stringArray0 = new String[2];
        stringArray0[0] = "rE";
        stringArray0[1] = "rE";
        wcApplication0.run(stringArray0, mockFileInputStream0, mockPrintStream0);
        assertEquals(32, mockFileInputStream0.available());
    }

    @DisabledOnOs({OS.MAC, OS.LINUX})
    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test09() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        MockPrintStream mockPrintStream0 = new MockPrintStream("\ttotal");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream("\ttotal");
        String[] stringArray0 = new String[0];
        wcApplication0.run(stringArray0, mockFileInputStream0, mockPrintStream0);
        wcApplication0.run(stringArray0, mockFileInputStream0, mockPrintStream0);
        assertEquals(24, mockFileInputStream0.available());
    }

    @DisabledOnOs({OS.MAC, OS.LINUX})
    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test10() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        MockPrintStream mockPrintStream0 = new MockPrintStream("s+");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream("s+");
        String[] stringArray0 = new String[5];
        stringArray0[0] = "s+";
        stringArray0[1] = "s+";
        stringArray0[2] = "-";
        stringArray0[3] = "s+";
        stringArray0[4] = "s+";
        wcApplication0.run(stringArray0, mockFileInputStream0, mockPrintStream0);
        assertEquals(59, mockFileInputStream0.available());
    }

    @Test
    @Timeout(value = 4000, unit = TimeUnit.MILLISECONDS)
    public void test11() throws Throwable {
        WcApplication wcApplication0 = new WcApplication();
        MockPrintStream mockPrintStream0 = new MockPrintStream("*0bq;2$]");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream("*0bq;2$]");
        String[] stringArray0 = new String[1];
        try {
            wcApplication0.run(stringArray0, mockFileInputStream0, (OutputStream) null);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // wc: Null Pointer Exception
            //
            verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
        }
    }
}
